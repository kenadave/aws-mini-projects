name: Emergency Rollback

on:
  workflow_dispatch:
    inputs:
      region:
        description: 'Region to rollback (primary/secondary/both)'
        required: true
        default: 'both'
        type: choice
        options:
        - primary
        - secondary
        - both

env:
  PRIMARY_REGION: us-east-1
  SECONDARY_REGION: us-west-2

jobs:
  rollback:
    runs-on: ubuntu-latest
    steps:
      - name: Rollback Primary Region
        if: ${{ github.event.inputs.region == 'primary' || github.event.inputs.region == 'both' }}
        run: |
          aws cloudformation cancel-update-stack --stack-name multi-region-primary --region ${{ env.PRIMARY_REGION }} || true
          aws cloudformation continue-update-rollback --stack-name multi-region-primary --region ${{ env.PRIMARY_REGION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Rollback Secondary Region
        if: ${{ github.event.inputs.region == 'secondary' || github.event.inputs.region == 'both' }}
        run: |
          aws cloudformation cancel-update-stack --stack-name multi-region-secondary --region ${{ env.SECONDARY_REGION }} || true
          aws cloudformation continue-update-rollback --stack-name multi-region-secondary --region ${{ env.SECONDARY_REGION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Verify Rollback Status
        run: |
          if [[ "${{ github.event.inputs.region }}" == "primary" || "${{ github.event.inputs.region }}" == "both" ]]; then
            aws cloudformation wait stack-update-complete --stack-name multi-region-primary --region ${{ env.PRIMARY_REGION }}
          fi
          
          if [[ "${{ github.event.inputs.region }}" == "secondary" || "${{ github.event.inputs.region }}" == "both" ]]; then
            aws cloudformation wait stack-update-complete --stack-name multi-region-secondary --region ${{ env.SECONDARY_REGION }}
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}